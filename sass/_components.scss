.small-word {
    font-size: 70%;
}

.section-heading {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    width: 10rem;
    height: 6.5rem;
    margin-bottom: 8rem;
    font-size: 3.2rem;
    text-transform: uppercase;
    &::after {
        display: block;
        height: 3px;
        width: 4rem;
        background-color: $color-primary;
        content: '';
    }
    &--white {
        color: white;
        letter-spacing: 2px;
    }
}

.btn {
    &,
    &:link,
    &:visited {
        display: block;
        position: relative;
        z-index: 0;
        padding: 1.5rem 3rem;
        border: 3px solid white;
        border-radius: 1px;
        box-shadow: 0 2px 8px 0 rgba(black, 0.2);
        background-color: transparent;
        color: white;
        text-decoration: none;
        outline: none;
        cursor: pointer;
        transition: all 0.2s;
    }
    &:hover {
        border: 3px solid $color-primary-dark;
        box-shadow: 0 3px 12px 0 rgba(black, 0.2);
        color: white;
        transform: translateY(-2px);
    }
    &:active {
        box-shadow: 0 1px 4px 0 rgba(black, 0.2);
        transform: translateY(1px);
    }
    &::after,
    &:link::after,
    &:visited::after {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        width: 100%;
        height: 100%;
        transform: scaleX(0);
        background-color: $color-primary-dark;
        transition: transform 0.2s;
        content: '';
    }
    &:hover::after,
    &:active::after {
        transform: scaleX(1);
    }
    &--small {
        padding: 1rem 2rem;
    }
}

.square-arrow-up {
    position: relative;
    width: 40px;
    height: 40px;
    z-index: $z-highest;
    border: 1px solid $color-primary-dark;
    box-shadow: 0 1px 4px 0 rgba(black, 0.1);
    background-color: transparent;
    transition: all 0.2s;
    &::after {
        display: block;
        position: absolute;
        bottom: 50%;
        right: 50%;
        width: 10px;
        height: 1px;
        background-color: $color-primary-dark;
        transform: rotate(-45deg) translateY(2px);
        content: '';
    }
    &::before {
        display: block;
        position: absolute;
        bottom: 50%;
        left: 50%;
        width: 10px;
        height: 1px;
        background-color: $color-primary-dark;
        transform: rotate(45deg) translateY(2px);
        content: '';
    }
    &:hover {
        background-color: $color-primary-dark;
        transform: translateY(-2px);
        &::after {
            background-color: white;
        }
        &::before {
            background-color: white;
        }
    }
    &:active {
        transform: translateY(1px);
    }
}

// modifiers for tiny slider
.tns-outer {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    width: 100%;
}

.tns-ovh {
    flex: 1;
    position: relative;
    z-index: 0;
    width: 80%;
}

.tns-item {
    padding: 0 4rem;
}

.tns-nav {
    display: flex;
    justify-content: center;
    margin-top: 5rem;
    margin-bottom: 5rem;
    &>button {
        height: 10px;
        width: 10px;
        margin: 0 5px;
        border: none;
        background-color: white;
        outline: none;
    }
    &>&-active {
        background-color: $color-primary;
    }
}

.tns-controls {
    display: flex;
    justify-content: space-between;
    position: absolute;
    top: 30%;
    z-index: 10;
    width: 82%;
    outline: none;
    &>button {
        width: 4rem;
        height: 4rem;
        border: none;
        border-top: 2rem solid transparent;
        border-bottom: 2rem solid transparent;
        outline: none;
        background-color: transparent;
        &:first-child {
            border-right: 2rem solid $color-primary-dark;
            border-left: 2rem solid transparent;
        }
        &:last-child {
            border-right: 2rem solid transparent;
            border-left: 2rem solid $color-primary-dark;
        }
    }
}

/* card */

.card {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-evenly;
    /* flexで高さをとるとレイアウトが崩壊するのでハードコード */
    height: $section-height * 0.6;
    width: 100%;
    padding: 6rem 6rem;
    box-shadow: 0 2px 4px 2px rgba(black, 0.2);
    border-radius: 1px;
    background-color: white;
    &__heading {
        font-size: 2.8rem;
        margin-bottom: 5rem;
    }
    &__pie {
        margin-bottom: 7rem;
    }
    &__description {
        flex: 1;
        width: 100%;
    }
    &__detail {
        margin-bottom: 1.8rem;
    }
}

@mixin makePie( $percentage, $anime-half-duration, $font-size, $outer-radius, $inner-radius, $fg-color, $bg-color) {
    position: relative;
    width: $outer-radius * 2;
    height: $outer-radius * 2;
    .pie__right {
        position: absolute;
        right: 0;
        width: calc(#{$outer-radius} + 1px);
        height: $outer-radius * 2;
        overflow: hidden;
        &::before {
            display: block;
            position: absolute;
            right: 0;
            width: $outer-radius * 2;
            height: $outer-radius * 2;
            border-radius: 50%;
            background-image: linear-gradient( to right, $fg-color 50%, transparent 50%); // animation: rotateRightPie $anime-half-duration;
            @include rotate-right-pie($percentage, $anime-half-duration);
            animation-fill-mode: forwards;
            content: '';
        }
    }
    .pie__left {
        @if $percentage < 50 {
            display: none;
        }
        position: absolute;
        left: 0;
        width: $outer-radius;
        height: $outer-radius * 2;
        overflow: hidden;
        &::before {
            display: block;
            position: absolute;
            left: 0;
            width: $outer-radius * 2;
            height: $outer-radius * 2;
            border-radius: 50%;
            background-image: linear-gradient( to right, transparent 50%, $fg-color 50%);
            @include rotate-left-pie($percentage, $anime-half-duration);
            animation-fill-mode: forwards;
            content: '';
        }
    }
    .pie__center {
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        top: $outer-radius;
        left: $outer-radius;
        width: $inner-radius * 2;
        height: $inner-radius * 2;
        border-radius: 50%;
        background-color: $bg-color;
        transform: translate(-50%, -50%);
        &::before {
            display: block;
            font-size: $font-size;
            font-weight: 700;
            opacity: 0;
            animation: fadeIn $anime-half-duration;
            animation-delay: $anime-half-duration;
            animation-fill-mode: forwards;
            content: '#{$percentage}%';
        }
    }
}

@mixin rotate-right-pie($percentage, $half-duration) {
    @keyframes rotate-right-pie-#{$percentage} {
        0% {
            transform: rotate(0);
        }
        100% {
            @if $percentage>50 {
                transform: rotate(180deg);
            }
            @else {
                transform: rotate(($percentage/ 50) * 180deg);
            }
        }
    }
    animation: rotate-right-pie-#{$percentage} $half-duration ease-in;
}

@mixin rotate-left-pie($percentage, $half-duration) {
    @keyframes rotate-left-pie-#{$percentage} {
        0% {
            transform: rotate(0);
        }
        100% {
            @if $percentage>50 {
                transform: rotate(($percentage - 50)/50 * 180deg);
            }
            @else {
                transform: rotate(0);
            }
        }
    }
    animation: rotate-left-pie-#{$percentage} $half-duration ease-out $half-duration;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateY(10px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.pie {
    &--python {
        @include makePie(80, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--javascript {
        @include makePie(60, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--go {
        @include makePie(50, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--sql {
        @include makePie(60, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--debian {
        @include makePie(40, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--nodejs {
        @include makePie(50, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--r {
        @include makePie(40, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--excel {
        @include makePie(90, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--c {
        @include makePie(30, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
    &--others {
        @include makePie(10, 1s, 3.8rem, 10rem, 6rem, $color-primary, white);
    }
}
